<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smdev.stockpn.repository.StockPNRepository">

    <select id="getPos" parameterType="ParamMap" resultType="ParamMap">
        select *
        from (
                 select  a.date_
                      , a.code_         as code
                      , a.name_         as name
                      , max(a.pn)       as pn
                      , max(a.ratio_)   as ratio
                      , count(*)        as cnt
                      , max(a.key_)     as keyCode
                 from    (
                             select
                                 key_, date_, code_, name_, ratio_,
                                 case when nvl(feed_n_, 0) <![CDATA[ < ]]><![CDATA[ > ]]> nvl(feed_p_, 0)
                                     and GREATEST(nvl(feed_n_, 0), nvl(feed_p_, 0)) <![CDATA[ > ]]> 0 then
                                          case when feed_n_ = GREATEST(nvl(feed_n_, 0), nvl(feed_p_, 0)) then 'N'
                                               when feed_p_ = GREATEST(nvl(feed_n_, 0), nvl(feed_p_, 0)) then 'P'
                                              end
                                      else
                                          case   when GPT_PN_ is not null then
                                                     case when GPT_PN_ = 'P' then 'P'
                                                          when GPT_PN_ = 'N' then 'N'
                                                          else '' end
                                                 else
                                                     case when pn_ = 'P' then 'P'
                                                          when pn_ = 'N' then 'N'
                                                          else '' end
                                              end
                                     end as   pn
                             from    hdbown.prediction_pn
                         ) a
                 where   1 = 1
                   and     a.pn = 'P'
                   and     a.date_ = to_char(sysdate+9/24, 'YYYY-MM-DD')
                 group by a.date_, a.code_, a.name_
                 order by a.date_ desc, ratio desc
        ) where rownum <![CDATA[ < ]]>= 10
    </select>

    <select id="getNeg" parameterType="ParamMap" resultType="ParamMap">
        select *
        from (
                 select  a.date_
                      , a.code_         as code
                      , substr(a.name_,1,1) || lpad('*',length(a.name_)-2,'*') || substr(a.name_, length(a.name_), 1) AS name
                      , max(a.pn)       as pn
                      , max(a.ratio_)   as ratio
                      , count(*)        as cnt
                      , max(a.key_)     as keyCode
                 from    (
                             select
                                 key_, date_, code_, name_, ratio_,
                                 case when nvl(feed_n_, 0) <![CDATA[ < ]]><![CDATA[ > ]]> nvl(feed_p_, 0)
                                     and GREATEST(nvl(feed_n_, 0), nvl(feed_p_, 0)) <![CDATA[ > ]]> 0 then
                                          case when feed_n_ = GREATEST(nvl(feed_n_, 0), nvl(feed_p_, 0)) then 'N'
                                               when feed_p_ = GREATEST(nvl(feed_n_, 0), nvl(feed_p_, 0)) then 'P'
                                              end
                                      else
                                          case   when GPT_PN_ is not null then
                                                     case when GPT_PN_ = 'P' then 'P'
                                                          when GPT_PN_ = 'N' then 'N'
                                                          else '' end
                                                 else
                                                     case when pn_ = 'P' then 'P'
                                                          when pn_ = 'N' then 'N'
                                                          else '' end
                                              end
                                     end as   pn
                             from    hdbown.prediction_pn
                         ) a
                 where   1 = 1
                   and     a.pn = 'N'
                   and     not exists (select x.code_ from hdbown.prediction_pn x where x.date_ = a.date_ and x.code_ = a.code_ and  (x.GPT_PN_ = 'P' or x.feed_p_ > 0))
                   and     a.date_ = to_char(sysdate+9/24, 'YYYY-MM-DD')
                 group by a.date_, a.code_, a.name_
                 order by a.date_ desc, ratio desc
             ) where rownum <![CDATA[ < ]]>= 10
    </select>

    <select id="getUSA" parameterType="ParamMap" resultType="ParamMap">
        select *
        from (
            select
                a.ticker as keyCode
                , a.ticker as code
                , a.company_name as name
                , a.cl_pn as pn
                , a.ratio
                , a.cnt
                from
                (
                select
                        ticker, date_, compound, company_name,
                        round(abs(compound), 2) * 100 as ratio,
                        case when compound <![CDATA[ > ]]> 0 then 'P' when  compound <![CDATA[ < ]]> 0 then 'N' end cl_pn,
                        count(*) cnt
                from    HDBOWN.prediction_pn_us
                where   1=1
                and     date_ = to_char(sysdate+9/24, 'YYYYMMDD')
                group by ticker, date_, compound, company_name
            ) a
            where 1=1
            and a.cl_pn is not null
            <if test="PN != null and PN != ''">
                and a.cl_pn = #{PN}
            </if>
            order by a.ratio desc
         ) where rownum <![CDATA[ < ]]>= 10
    </select>

    <select id="getDetail" parameterType="ParamMap" resultType="ParamMap">
        select
            *
        from (
                 select
                        a.code_, a.name_, TO_CHAR(nvl(a.close_, 0), 'FM999,999,999,999') as close, TO_CHAR(nvl(a.diff_, 0), 'FM999,999,999,999') as diff, TO_CHAR(nvl(a.open_, 0) , 'FM999,999,999,999') as open,
                        TO_CHAR(nvl(a.high_, 0), 'FM999,999,999,999') as high, TO_CHAR(nvl(a.low_, 0), 'FM999,999,999,999') as low, TO_CHAR(nvl(a.volume_, 0) , 'FM999,999,999,999')as volume,
                        b.ticker_desc1, b.ticker_desc2, b.sise_52_price, b.sise_revenue_rate, b.sise_siga_tot, b.sise_siga_tot2,
                        b.sise_issue_stock_normal, b.toja_discision, b.toja_prop_price, b.toja_eps, b.toja_per, b.toja_comp,
                        b.srim_revenue_rate, b.srim_jibea, b.srim_roa, b.srim_roe,
                        substr(b.srim_value,1,instr(b.srim_value,'.',1,1)-1) as srim_value,
                        b.srim_issue_stock,
                        b.srim_prop_price, b.srim_10_price, b.srim_20_price,
                        a.CONTENT_, nvl(a.report_, '-') as report_
                 from   hdbown.prediction_pn a,
                        hdbown.prediction_detail_ko b
                 where  1=1
                   and  a.code_ = b.code_
                   and  replace(a.date_, '-') = b.date_
                    <if test="KEY != null and KEY != ''">
                        and a.key_ = #{KEY}
                    </if>
             ) where rownum = 1
    </select>

    <select id="getDetail_us" parameterType="ParamMap" resultType="ParamMap">
        select *
        from (
                 select  headline, ticker, company_name as name
                 from    HDBOWN.prediction_pn_us
                 where   1=1
                   and   date_ = to_char(sysdate+9/24, 'YYYYMMDD')
                   and   ticker = #{KEY}
             )
    </select>

    <select id="save" parameterType="ParamMap" resultType="ParamMap">
        <choose>
            <when test="CL != null and CL == &quot;US&quot;">
                <if test="FEED == &quot;P&quot;">
                    update  hdbown.prediction_pn_us a
                    set     feed_p = (select nvl(max(feed_p), 0) + 1 from hdbown.prediction_pn_us where ticker = #{KEY})
                    where   a.ticker = #{KEY}
                </if>
                <if test="FEED == &quot;N&quot;">
                    update  hdbown.prediction_pn_us a
                    set     feed_n = (select nvl(max(feed_n), 0) + 1 from hdbown.prediction_pn_us where ticker = #{KEY})
                    where   a.ticker = #{KEY}
                </if>
            </when>
            <otherwise>
                <if test="FEED == &quot;P&quot;">
                    update  hdbown.prediction_pn a
                    set     feed_p_ = (select nvl(max(feed_p_), 0) + 1 from hdbown.prediction_pn where key_ = #{KEY})
                    where   a.key_ = #{KEY}
                </if>
                <if test="FEED == &quot;N&quot;">
                    update  hdbown.prediction_pn a
                    set     feed_n_ = (select nvl(max(feed_n_), 0) + 1 from hdbown.prediction_pn where key_ = #{KEY})
                    where   a.key_ = #{KEY}
                </if>
            </otherwise>
        </choose>


    </select>

</mapper>